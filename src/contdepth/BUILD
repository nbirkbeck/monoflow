DEP_LIBS = [
    "//ik:ikglobals",
    "//autorecon:autorecon",
    "//autorecon/stereo:autorecon-flow",
    "//contdepth/MRF2.1:MRF",
    "//utigl:glcommon",
]
COPTS = ["-Wno-deprecated -Wno-unused-result -Wno-reorder -Wno-class-memaccess -fpermissive -I/usr/include/lapack -DGL_GLEXT_PROTOTYPES"]

cc_library(
    name = "contdepth",
    srcs = [
        "DisplaceUV.cc",
        "GroundTruthLib.cc",
        "Math.cc",
        "VariationalBasisProblemUV.cc",
        "VariationalOffsetProblemUV.cc",
        "VariationalProblemUV.cc",
        "discrete.cc",
        "hermite.cc",
        "utils.cc",
        "variational.cc",
        "variational-sf.cc",
    ],
    hdrs = [
        "AnimationCurve.h",
        "BaseMeshAnimation.h",
        "CosineFlow2D.h",
        "DisparityMap.h",
        "DisparityOffset.h",
        "DisparitySequence.h",
        "DisplaceOffsetBasis.h",
        "DisplaceUV.h",
        "EpipolarLine.h",
        "ExplicitDepthOffsetMesh.h",
        "FlowBasis3D.h",
        "FlowMap.h",
        "GroundTruthLib.h",
        "Math.h",
        "OffsetMesh.h",
        "TimeVaryingDisplacedMesh.h",
        "VariationalBasisProblemUV.h",
        "VariationalOffsetProblemUV.h",
        "VariationalProblemUV.h",
        "VisualizeBaseWindow.h",
        "discrete.h",
        "hermite.h",
        "utils.h",
        "variational.h",
        "variational-sf.h",
        "vec5.h",
    ],
    copts = COPTS,
    deps = DEP_LIBS,
)

binaries = [
    "AddNoise",
    "compare",
    "CompareBasis",
    "CosineFlow2D",
    "discrete_main",
    "displace_offset_basis",
    "displace_offset_uv",
    "displace_uv",
    "FitAnimToDisplacements",
    "Generate",
    "GroundTruth",
    "GroundTruthBasis",
    "main",
    "OpticFlowCameras3D",
    "RenderSequence",
    "Visualize",
    "VisualizeBasis3D",
]

[cc_binary(
    name = name.replace("_main", ""),
    srcs = [name + ".cc"],
    copts = COPTS,
    linkopts = ["-lGLEW -lGL -lGLU -lglut  -lboost_iostreams -lboost_serialization  -lboost_wserialization -lboost_filesystem -llbfgs"],
    deps = DEP_LIBS + [
        ":contdepth",
        "@nimage//:lib",
        "@nmath//:lib",
    ],
) for name in binaries]
